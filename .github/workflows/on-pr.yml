name: on-pr

on:
  pull_request:
    branches:
      - main

jobs:
  find-changed-projects:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.find-changed-projects.outputs.projects }}
    steps:
      - name: Check out the PR
        uses: actions/checkout@v4

      - name: Find changed projects
        id: find-changed-projects
        uses: ./.github/actions/find-changed-projects
        with:
          base_ref: ${{ github.event.pull_request.base.sha }}
          new_ref: ${{ github.sha }}

  bake:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs: [find-changed-projects]
    # Handle empty needs to resolve ` Matrix vector 'project' does not contain any values` error
    if: ${{ needs.find-changed-projects.outputs.projects != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.find-changed-projects.outputs.projects) }}
    steps:
      - name: Check out the PR
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            typst-target
            typstyle-target
            cargo-registry
          key: cache-${{ hashFiles(format('{0}/{1}', matrix.project, 'Dockerfile')) }}

      - name: Inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "typst-target": "/typst/target/",
              "typstyle-target": "/typstyle/target/",
              "cargo-registry": "/usr/local/cargo/registry/"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }} 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bake
        uses: docker/bake-action@v6
        with:
          workdir: ${{ matrix.project }}
          source: .
          push: false

  # A job that summarizes the results of `plan` jobs for required status checks.
  all-bake:
    permissions: {}
    runs-on: ubuntu-latest
    needs: [find-changed-projects, bake]
    if: ${{ success() || (needs.find-changed-projects.result == 'success' && needs.find-changed-projects.outputs.projects == '[]') }}
    steps:
      - name: Null Step
        run: |
          echo '${{ toJson(needs) }}'
